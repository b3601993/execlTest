[0:undefined, 1:undefined,2:undefined | "bb"] --- ldc

[0:undefined, 1:"bb",2:undefined | ] --- astore_1   String result="bb"

[0:undefined, 1:"bb",2:undefined | 0] --- iconst_0

[0:undefined, 1:"bb",2:0 | ] --- istore_2 将常量0赋值，赋值给int型的slot2变量

[0:undefined, 1:"bb",2:0 | ] --- goto

[0:undefined, 1:"bb",2:0 | StringBuilder] --- new 创建一个StringBuiler对象

[0:undefined, 1:"bb",2:0 | StringBuilder, StringBuilder] --- dup 复制栈顶元素，并压入栈顶

[0:undefined, 1:"bb",2:0 | StringBuilder, new StringBuilder(), "bb"]   --- aload_1 将局部slot1的引用型变量压入栈顶

[0:undefined, 1:"bb",2:0 | StringBuilder, StringBuilder]  ---  invokestatic 弹出"bb",调用String.valueOf("bb") 返回字符串

[0:undefined, 1:"bb",2:0 | StringBuilder] --- invokespecial  弹出StringBuilder，作为this的参数传给StringBuilder构造器

[0:undefined, 1:"bb",2:0 | StringBuilder, "a"] --- ldc 加载常量a

[0:undefined, 1:"bb",2:0 | StringBuilder] --- invokestatic 弹出两个元素（"a"） new StringBuilder().append(result)

[0:undefined, 1:"bb",2:0 | StringBuilder, "a"] --- invokevirtual 将字符串"a"加载进栈

[0:undefined, 1:"bba",2:0 | StringBuilder] --- astore_1 将StringBuilder, "a"弹出栈，执行

[0:undefined, 1:"bba",2:1 | StringBuilder] --- iinc 2,1我理解为 第二个局部变量加1

[0:undefined, 1:"bba",2:1 | StringBuilder, 1] --- iload_2 第三个int型局部变量进栈

[0:undefined, 1:"bba",2:1 | StringBuilder, 1，20] --- bipush 数字20进栈

[0:undefined, 1:"bba",2:1 | StringBuilder] --- if_icmplt 从栈中弹出两个int型数字（1，20），如果第一个小于第二个，则跳转。


[0:undefined, 1:"bba",2:1 | StringBuilder]
